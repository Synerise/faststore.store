# RECOMMENDATIONS
type RecommendationExtras {
    correlationId: String!
    contextItems: [ContextItem!]
    slots: [Slot!]!
}

type ContextItem {
    itemId: String!
    additionalData: JSONObject
}

type Slot {
    id: Int!
    name: String!
    itemIds: [String!]!
    error: SlotError
}

type SlotError {
    status: Int!
    error: String!
    message: String!
}

input ItemsSourceInput {
    type: ItemsSourceType!
    id: String!
}

enum ItemsSourceType {
    aggregate
    expression
}

enum FilterJoiner {
    AND
    OR
    REPLACE
}

type SyneriseRecommendationsResponse {
    data: [StoreProduct!]!
    extras: RecommendationExtras!
}

type SyneriseRecommendationsResult {
    recommendations(
        apiHost: String
        trackerKey: String
        campaignId: String
        clientUUID: String
        items: [String]
        itemsSource: ItemsSourceInput
        itemsExcluded: [String]
        additionalFilters: String
        filtersJoiner: FilterJoiner
        additionalElasticFilters: String
        elasticFiltersJoiner: FilterJoiner
        displayAttributes: [String]
        includeContextItems: Boolean
    ): SyneriseRecommendationsResponse
}

scalar JSONObject
